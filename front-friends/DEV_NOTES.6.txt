VT WEB DEV W/ ANGULAR AND PHP (12h) - 51h 17 min
https://proquestcombo-safaribooksonline-com.res.banq.qc.ca/video/web-development/9781788394321


1 - Clone Laradock inside your PHP project:

git clone https://github.com/Laradock/laradock.git

2 - Enter the laradock folder and rename env-example to .env.

cp env-example .env

3 - Run your containers:

docker-compose up -d nginx mysql phpmyadmin workspace

4 - Open your projectï¿½s .env file and set the following:

DB_HOST=mysql
REDIS_HOST=redis
QUEUE_HOST=beanstalkd

phpadmin solution: https://github.com/laradock/laradock/issues/1694
 My dicision: sudo docker stop $(sudo docker ps -a -q)
sudo docker rm $(sudo docker ps -a -q)
sudo rm -rf ~/.laradock/data
changed latest on 5.7 version in .env MYSQL_VERSION
docker-compose up -d nginx mysql phpmyadmin

login in PhpMyAdmin:
server: mysql
login: root
password: root

5 - Open your browser and visit localhost: http://localhost.


6 - docker-compose exec workspace bash

7 - root@75681c5b178a:/var/www# composer create-project laravel/laravel back-friends

8 - CHANGE laradock .env :
# Point to the path of your applications code on your host
APP_CODE_PATH_HOST=../back-friends

9 - 8 - CHANGE back-friends .env :
DB_CONNECTION=mysql
DB_HOST=mysql

10 - docker-compose stop

11 - docker-compose up -d nginx mysql phpmyadmin

12 - tested laravel app

13 - change laradock .env :
DOCKER_HOST_IP=10.0.75.1

DOCKER_HOST_IP=192.168.99.100

14 - configure  programe files/system32/drivers/etc/   host file

192.168.99.100  laradock

15 - CONFIGURE XDEBUG .env

PHP_FPM_INSTALL_XDEBUG=true
also workspace  xdebug=true

16 CONFIGURE XDEBUG.INI workspace and php-fm

xdebug.remote_autostart=1
xdebug.remote_enable=1

17 - docker-compose down

18 - docker-compose up -d nginx mysql phpmyadmin

19 - install extension php xdebug  in VSCODE and in browser xdebug helper

20 - in VSCODE configure xdebug launch.json (NOW WORKING!)

before:
    {
      "name": "Listen for XDebug",
      "type": "php",
      "request": "launch",
      "port": 9000

    },

after:
    {
      "name": "Listen for XDebug",
      "type": "php",
      "request": "launch",
      "port": 9000,
      "pathMappings": {
        "/var/www": "${workspaceRoot}/back-friends"
        }
    },


21 - in back-friends route/ web.php
before:
Route::get('/', function () {

    return view('welcome');
});

after:
Route::get('/', function () {
    $a = 5;
    $b = 4;
    $c = $a + $b;
    echo $c;
    return view('welcome');
});

22 - in web.php create a break point


23 - INSTALLING ANGULAR


24 - FRONTFRIENDS: Creating Register Page


30 - BACK-FRIENDS - APIs CREATION
 - go to root :
docker-compose exec workspace bash

31 Install JWTAUTH PACKAGE

composer require tymon/jwt-auth:dev-develop --prefer-source

32 - Follow the instructions: https://blog.pusher.com/laravel-jwt/

root@a4cbe8ba1e4f:/var/www# php artisan jwt:secret
jwt-auth secret [1qXyuOqVK1MY5dN4nP0hkhD02mdAbGHv] set successfully.

33 - in app/http/    kernel.php add:
    protected $routeMiddleware = [
		.......
        'jwt.auth' => 'Tymon\JWTAuth\Middleware\GetUserFromToken',
        'jwt.refresh' => 'Tymon\JWTAuth\Middleware\RefreshToken',
    ];

 34 - in routes/  api.php create register route

Route::post('/register', 'AuthController@register');

35 - create authcontroler in root:

docker-compose exec workspace bash

root@a4cbe8ba1e4f:/var/www#    php artisan make:controller AuthController

36 - clear routes in web.php in routes/

36 - Add register method in AuthController

37 - in root run :

before: in back-friends  set db_name, users, etc

php artisan migrate

docker-compose up -d nginx mysql phpmyadmin

38 - In AuthController import:



39 - Create register function

    public function register(Request $request)
    {
        $rules = [
            'firstName' => 'required',
            'email' => 'unique:users|required',
            'password' => 'required'
        ];
        $input = $request->only('firstName', 'email', 'password');

        $validator = Validator::make($input, $rules);
        if($validator->fails()) {
            return response()->json(['success'=> false, 'error'=> $validator->messages()]);
        }

        $firstName = $request->firstName;
        $lastName = $request->lastName;
        $email = $request->email;
        $password = $request->password;

        $user = User::create([
            'firstName' => $firstName,
            'lastName' => $lastName,
            'email' => $email,
            'password' => Hash::make($password)
        ]);

        return response()->json(['success' => true]);
    }

40 - Test api in POSTMAN

41 - Made in User.php  / Migrations users_table


    public function up()
    {
        Schema::create('users', function (Blueprint $table) {
            $table->increments('id');
            $table->string('firstName');
            $table->string('lastName');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });
    }

42 - rerun migration in root:

php artisan migrate:rollback

this erase all the data

php artisan migrate

43 - Install laravel-cors library in the root:

composer require barryvdh/laravel-cors:

https://packagist.org/packages/barryvdh/laravel-cors

44 - Add in Kernel.php   http/

     * The application's global HTTP middleware stack.
     *
     * These middleware are run during every request to your application.
     *
     * @var array
     */
    protected $middleware = [
            ------------ Add code bellow --
        \Barryvdh\Cors\HandleCors::class,
    ];

45 - Configuration

The defaults are set in config/cors.php. Copy this file to your own config directory to modify the values. You can publish the config using this command:

$ php artisan vendor:publish --provider="Barryvdh\Cors\ServiceProvider"


46 - CREATING LOGIN PAGE

47 - CREATING SOCIAL-FEED

48 - Authentication




implements JWTSubject

use Tymon\JWTAuth\Contracts\JWTSubject;



49 - Some Important changes in User.php  app/


use Tymon\JWTAuth\Contracts\JWTSubject;  <<== Added

class User extends Authenticatable !!! implements JWTSubject!!

    /**   Get the identifier that will be stored in the subject claim of the JWT
     * @return mixed
     */
    public function getJWTIdentifier()
    {
        return $this->getKey();
    }
    /**
     * Return a key value array, containing any custom claims to be added to the JWT.
     * @return array
     */

     public function getJWTCustomClaims()
     {
         return [];
     }

50 - In Auth.php  config/
before:
    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

after:
    'defaults' => [
        'guard' => 'api',
        'passwords' => 'users',
    ],


51 -  Authentication guard
before
    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],

        'api' => [
            'driver' => 'token',
            'provider' => 'users',
        ],
    ],

    after:
        'guards' => [

        'api' => [
            'driver' => 'jwt',
            'provider' => 'users',
        ],
    ],

52 - Rebuild api.php  routes/

new:
Route::group([
    'middleware' => 'api',
    'prefix'     =>  'auth'
], function() {
Route::post('/register', 'AuthController@register');
Route::post('/login', 'AuthController@login');
});

53 - Changing handling from unauthorized person in Hanlder.php app/Exceptions

add:
use Illuminate\Auth\AuthenticationException;


add
    /**
     * Convert an authentication exception into a response.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Illuminate\Auth\AuthenticationException  $exception
     * @return \Illuminate\Http\Response
     */
    protected function unauthenticated($request, AuthenticationException $exception)
    {
        return $request->expectsJson()
                    ? response()->json(['message' => $exception->getMessage()], 401)
                    : redirect()->guest($exception->redirectTo() ?? route('login'));
    }


!!! LOST DATA FROM DATABASE !! ==> set a path in .env  laradock/
DATA_PATH_HOST=../back-friends/data

5558

 docker-compose up -d nginx mysql phpmyadmin

 docker-compose exec workspace bash

 Users/wshir/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/laradock



#########################################################################

#phpadmin solution: https://github.com/laradock/laradock/issues/1694
 My dicision: sudo docker stop $(sudo docker ps -a -q)
sudo docker rm $(sudo docker ps -a -q)
sudo rm -rf ~/.laradock/data
changed latest on 5.7 version in .env MYSQL_VERSION
docker-compose up -d nginx mysql phpmyadmin

########################################################################

PUSHING BRANCH TO github:

git push --set-upstream origin front/register

git push --set-upstream origin front/feed

git merge front/feed

############################################################################

NEXT  COMMIT ADD CORRECTED CODE IN:

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (dev)
$ git commit -m'Updated code in login.component.ts/social-feed.component.html/social-feed.component.ts'

##############################################################################

 git push --set-upstream origin authentication


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/laradock (master)
$ docker-compose exec workspace bash
root@588944be3429:/var/www# php artisan make:model Post -m
Model created successfully.
Created Migration: 2018_10_26_192119_create_posts_table



54 - ADDING RELATIONSHIP TO USER.PHP

55 - CREATING CONTROLLER AND MODEL AT THE SAME TIME:
root@588944be3429:/var/www#
php artisan make:controller PostController --resource --model=Post
Controller created successfully.

55 -
root@588944be3429:/var/www# php artisan migrate
Migrating: 2018_10_26_192119_create_posts_table
Migrated:  2018_10_26_192119_create_posts_table

56 -
root@588944be3429:/var/www# php artisan migrate:rollback
Rolling back: 2018_10_26_192119_create_posts_table
Rolled back:  2018_10_26_192119_create_posts_table

root@588944be3429:/var/www# php artisan migrate
Migrating: 2018_10_26_192119_create_posts_table
Migrated:  2018_10_26_192119_create_posts_table

#################################################################

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends/src/app/shared/services (service-network)
$ ng g service network --flat

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (service-network)
$ git commit -m'Implemented service-network in social-feed component'

$ git push --set-upstream origin service-network

  git merge service-network

##############################################################

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge post

$ git checkout -b user

root@588944be3429:/var/www# php artisan make:controller UserController --resource --model=User
Controller created successfully.

Route::apiResource('users', 'UserController');

root@588944be3429:/var/www# php artisan route:list

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git commit -m'Api User finished successfully'

        new file:   app/Http/Controllers/UserController.php
        modified:   routes/api.php

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git push --set-upstream origin user

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge user

###########################################:###########################################33

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (dev)
$ git checkout -b single-post


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (single-post)
$ ng add moment

Installed packages for tooling via npm.
Package "moment" was found but does not support schematics.
Error: Package "moment" was found but does not support schematics.


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (single-post)$
 npm install angular-moment moment --save

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (single-post)
$ git commit -m'Single-post Branch finished successfully |Added  Moment Package/DEV_NOTES.1.txt'


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (single-post)
$ git push --set-upstream origin single-post

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (dev)
$ git merge single-post

#############################################################################

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git commit -m'Added DBs'

$ git push

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge user

#############################################################################
1h 17 min
ALLOW TO GET ALL USER IN OUR APP:

UserController:

    public function index()
    {
        return response()->json(User::all());
    }

RELATIONSHIP  MANY TO MANY OF FRIENDS IN USER MODEL: (SEE USER MODEL)

Create Table to the RELATIONSHIP:

Modified _create_users_table

root@588944be3429:/var/www# php artisan migrate:reset
Migration not found: 2018_10_26_192119_create_posts_table
Rolling back: 2014_10_12_100000_create_password_resets_table
Rolled back:  2014_10_12_100000_create_password_resets_table
Rolling back: 2014_10_12_000000_create_users_table
Rolled back:  2014_10_12_000000_create_users_table

root@588944be3429:/var/www# php artisan migrate
Migrating: 2014_10_12_000000_create_users_table
Migrated:  2014_10_12_000000_create_users_table
Migrating: 2014_10_12_100000_create_password_resets_table
Migrated:  2014_10_12_100000_create_password_resets_table


TEST APPI  IN POSTMAN
Adding friends to our RELATIONSHIP
http://192.168.99.100/api/users/2/add_friend


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git commit -m'Updated DB design | Created Users-Friends Route | Made New Migration | Created Relationship Users-Friends'

$ git push

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge user

#####################################################################################################

CREATION OF USER-FRIENDS COMPONENT

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (dev)
$ git checkout -b users-friends
Switched to a new branch 'users-friends'

pwd
wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (users-friends)
$ git commit -m'Updated Dev Notes.tx/Routing/Social-Feed/App.module | Users-Friends Component(1/3)'

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (users-friends)
$ git push --set-upstream origin users-friends


######################################################################33333

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git commit -m'Updated  app/User.php'

$ git push

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge user


docker-compose up -d nginx mysql phpmyadmin workspace

docker-compose exec workspace bash

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git commit -m'Updated PostController & Post model | Added DB_v105.sql'

UPDATED BRANCH USER

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git push --set-upstream origin user


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (users-friends)
$ git commit -m'Added button logout/remove friends/public post private and to all | Added Dev_notes| Updated code in Components add-entry.component
/entities/Posts.ts/auth.service.ts/social-feed.component/users-friends.component'
[users-friends 84f0f3e] Added button logout/remove friends/public post private and to all | Added Dev_notes| Updated code in Components add-entry.component/entities/Posts.ts/auth.service.ts/social-feed.component/users-friends.component
 8 files changed, 690 insertions(+), 64 deletions(-)
 create mode 100644 DEV_NOTES.3.txt

 wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (users-friends)
$ git push


Users/wshir/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/laradock

docker-compose up -d nginx mysql phpmyadmin workspace




Setting up Websockets        0:15:11

Handling Notifications of New Content   0:27:03

Getting Friends Notifications in Real-Time     0:16:46

docker-compose exec workspace bash

########################################################################3
#Setting up Websockets        0:15:11


1 - Configure laravel-echo-server.json in LARADOCK

IP = ???




root@588944be3429:/var/www# php artisan queue:listen

192.168.99.100

172.27.0.4



2 - IN LARADOCK .ENV Set

WORKSPACE_INSTALL_PHPREDIS=true



3. APP LARAVEL  .ENV

#QUEUE_CONNECTION=redis  ????

QUEUE_DRIVER=redis




4. APP  CONFIG/APP.PHP
/*
* Application Service Providers...
*/
 App\Providers\BroadcastServiceProvider::class,


5 - APP  app/Providers      BroadcastServiceProvider.php
class BroadcastServiceProvider extends ServiceProvider
{
    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        Broadcast::routes(['middleware' => ['api'] ]);

        require base_path('routes/channels.php');
    }
}

6 - Change ==> require base_path('routes/channels.php');
Add:

Broadcast::channel('test-channel', function () {
    return true;
});


7 - root@588944be3429:/var/www#
composer require predis/predis


8 -  In   app/Providers     EventServiceProvider.php

    protected $listen = [
        'App\Events\Event' => [
            'App\Listeners\EventListener',
        ],
    ];


9 - root@588944be3429:/var/www#
 php artisan event:generate



10 -  In app/Events     Event.php
IMport:
use Illuminate\Contracts\Broadcasting\ShouldBroadcast;

class Event implements ShouldBroadCast


    public function broadcastOn()
    {
        return new PrivateChannel('test-channel');
    }

    public function broadcastAs()
    {
        return 'test';
    }


http://172.27.0.4


11 - In  Http/Controllers     in PostController
    public function index()
    {
        event(new \App\Events\Event());  <<=== INSERTION CODE



12 - wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/laradock (Websockets)
$ docker-compose up -d laravel-echo-server



13 - root@588944be3429:/var/www# php artisan queue:listen


####################################################################

FRONTFRIENDS

1 - Modify index.html

  <script type="text/javascript" src="http://192.168.99.100:6001/socket.io/socket.io.js"></script>


2 - wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)ROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)$

npm add laravel-echo --save

3 - Create ng g service sockets and add it to providers in app.module

4 - See sockets.service.ts



wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)
$ ng npm add laravel-echo

Installed packages for tooling via npm.
Package "laravel-echo" was found but does not support schematics.
Error: Package "laravel-echo" was found but does not support schematics.


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)$ npm install -g laravel-echo-server

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friendsone is installed. You must install peer dependencies yourself. (Websockets)                                                                            e is installed. You must install peer dependencies yourself.
$ npm add laravel-echo

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)
$ ng g service sockets


#WEBSOCKETS - CHANGED DOCS IN THE BACKEND:
        new file:   DB_v106.sql
        new file:   app/Events/Event.php
        modified:   app/Http/Controllers/PostController.php
        new file:   app/Listeners/EventListener.php
        modified:   app/Providers/BroadcastServiceProvider.php
        modified:   app/Providers/EventServiceProvider.php
        modified:   composer.json
        modified:   composer.lock
        modified:   config/app.php
        modified:   routes/channels.php



wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (Websockets)
$ git commit -m'Installed/Configured Redis predis | Added Event | Configured Configure laravel-echo-server.json in LARADOCK'




wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)
$ git status


        modified:   package-lock.json
        modified:   package.json
        modified:   src/app/add-entry/add-entry.component.ts
        modified:   src/app/app.module.ts
        modified:   src/app/appr-routing.module.ts
        modified:   src/app/shared/services/auth.service.ts
        new file:   src/app/shared/services/sockets.service.ts
        modified:   src/index.html



wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)
$  git push --set-upstream origin Websockets

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (Websockets)
$ git push --set-upstream origin Websockets


##########################################################################33
HANDLING NOTIFICATIONS OF NEW CONTENT

1 -  In app/Providers     EventServiceProvider.php

    protected $listen = [
        'App\Events\PostCreated' => [
            'App\Listeners\PostCreatedListener',
        ],
    ];


2 - root@09ac4a880a91:/var/www# php artisan event:generate

3 - In app/  Post.php

    public function isPublic()
    {
        return $this->visibility === Post::VISIBILITY_STATUS_PUBLIC;
    }
4 - PostCreated  app/Events/

class PostCreated implements ShouldBroadcast
{


5 - Other modified files:

        new file:   app/Events/PostCreated.php
        modified:   app/Http/Controllers/PostController.php
        new file:   app/Listeners/PostCreatedListener.php
        modified:   app/Post.php
        modified:   app/Providers/EventServiceProvider.php
        modified:   routes/channels.php

################################################################

FRONTEND

1 - Implemented code on sockets.services.ts

host: 'http://192.168.99.100:6001',

2 - wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends/src/app/shared/services (Websockets)$

ng g service user --flat

3 - App.

4 - Other modifications

5 - ng g service post

6 - TEST ALL modifications:

root@09ac4a880a91:/var/www# php artisan queue:work

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (Websockets)
$ git commit -m'HANDLING NOTIFICATIONS OF NEW CONTENT | Created Events and Listeners of Posts'

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (Websockets)
$ git push

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)
$ git commit -m'Created Dev_Notes.4/post.service/user.service'

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)
$ git push


###################################################
Getting Friends Notifications in Real-Time

1- Changes in:

EventServiceProvider -
    protected $listen = [
        'App\Events\PostCreated' => [
            'App\Listeners\PostCreatedListener'
        ],
        'App\Events\FriendAdded' => [
            'App\Listeners\FriendAddedListener'
        ],

        'App\Events\FriendRemoved' => [
            'App\Listeners\FriendRemovedListener'
        ],
    ];


2 - root@09ac4a880a91:/var/www# php artisan event:generate

3 - Changes in:

        new file:   DB_v107.sql
        new file:   app/Events/FriendAdded.php
        new file:   app/Events/FriendRemoved.php
        modified:   app/Http/Controllers/UserController.php
        new file:   app/Listeners/FriendAddedListener.php
        new file:   app/Listeners/FriendRemovedListener.php
        modified:   app/Providers/EventServiceProvider.php


  -----------------------------------------------
  FRONTEND

1 - wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)ROJECTS/LARADOCKS_PROJECTS/front-friends (Websockets)$

npm install toastr --save

2 - styles.scss   import code

@import "node_modules/bootstrap/scss/utilities";

after :
@import "node_modules/toastr/toastr";

3 - UPDATED files in:

        new file:   DEV_NOTES.5.txt
        modified:   package-lock.json
        modified:   package.json
        modified:   src/app/shared/entities/User.ts
        modified:   src/app/shared/services/sockets.service.ts
        modified:   src/app/shared/services/user.service.ts
        modified:   src/app/users-friends/users-friends.component.ts
        modified:   src/assets/styles/styles.scss

---------------------------------------


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/laradock (Websockets)
$ docker-compose up -d laravel-echo-server mysql nginx

4 - root@09ac4a880a91:/var/www# php artisan queue:work

5 - TEST


 node_modules\toastr\toastr.js

#Toastr NOT WORKIN :warning:
:smile: SOLUTION SEARCH ==>  https://www.npmjs.com/package/toastr

removed import from styles.scss and add in index.html :

  <script type="text/javascript" src="http://192.168.99.100:6001/socket.io/socket.io.js"></script>

  <script src="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>


----------------------------------------------------------------------------------------------
wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (Websockets)
$ git commit -m'Added Events/Listeners - FriendAdded/RemovedListener | Updated code : UserController.php/EventServiceProvider.php | Added  DB_v107.
sql'

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (Websockets)
$ git push


Users/wshir/Documents/DOCKERPROJECTS/LARADOCKS/SOCIAL_MEDIA/back-friends



  ###########################################################################################################3

